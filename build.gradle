buildscript {
    ext {
        springBootVersion = "2.1.4.RELEASE"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'java'
}

ext {
    set('applicationVersion', "$majorVersion.$minorVersion.$patchVersion")
}

task incrementMinorVersion {
    doLast {
        incrementVersion("minorVersion")
    }
}

task incrementPatchVersion {
    doLast {
        incrementVersion("patchVersion")
    }
}

def static incrementVersion(String prop) {
    Properties properties = new Properties()
    File propsFile = new File("gradle.properties")
    properties.load(propsFile.newDataInputStream())
    Integer incremented = (((properties.getProperty(prop)) as Integer) + 1)
    properties.setProperty(prop, incremented.toString())
    properties.store(propsFile.newWriter(), null)
    properties.load(propsFile.newDataInputStream())
}

apply plugin: 'io.spring.dependency-management'

group = 'com.masonsmith'
version = "$applicationVersion-SNAPSHOT"
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

ext {
    set('springCloudVersion', 'Greenwich.SR1')
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('org.springframework.boot:spring-boot-starter-web')

    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    runtimeOnly('com.h2database:h2')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

bootJar {
    baseName = 'smithWedding'
}
